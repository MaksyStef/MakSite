/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 girl.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { LoopOnce } from 'three';

export default function Girl(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/3d/girl.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  React.useEffect(()=> {
    actions.Waving.setLoop(2200)
    actions.Waving.clampWhenFinished = true;
    actions.Waving.enabled = true;
    actions.Waving.play();
    let mixer = actions.Waving.getMixer()
    mixer.addEventListener('finished', ()=> {
      actions.Waving.crossFadeTo(actions["Standing Idle"], 1);
      actions["Standing Idle"].crossFadeFrom(actions.Waving, 1);
      actions["Standing Idle"].play();
    })
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01} position={[0.25, -0.875, 0]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Girl" geometry={nodes.Girl.geometry} material={materials.Ch03_Body} skeleton={nodes.Girl.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/3d/girl.glb')
